--------------------------------------------RETURN USER AND THIS BOAT(USER)---------------------------------------------
$userManager = UserManager::getInstance();
$data = $userManager->getUser(1);

$user = new User($data);
var_dump($user);
--------------------------------------------RETURN USER AND THIS BOAT(USER)---------------------------------------------

--------------------------------------------RETURN BOAT AND THIS User---------------------------------------------------
$boatManager = BoatController::getInstance();
$data = $boatManager->getOwnerBoat(1);

$boat = new Boat($data);
var_dump($boat);
--------------------------------------------RETURN BOAT AND THIS User---------------------------------------------------


-----------------------------------------------------RETURN BOAT LIST---------------------------------------------------
$boatController = BoatController::getInstance();
$boats = $boatController->getListBoat();

IN VIEW :

foreach ($boats as $boat)
{
    echo '<p>' . $boat->getName() . '</p>';
}
-----------------------------------------------------RETURN BOAT LIST---------------------------------------------------

-------------------------------------------RETURN BOAT CHOOSE WITH CAPACITY---------------------------------------------
$boatManager = BoatController::getInstance();
$boat = $boatManager->chooseBoat(1900);

var_dump($boat);
-------------------------------------------RETURN BOAT CHOOSE WITH CAPACITY---------------------------------------------


------------------------------------------------------ADD BOAT----------------------------------------------------------
$boatController = BoatController::getInstance();
$boatController->addBoat(1,"OceanGun",1900);
------------------------------------------------------ADD BOAT----------------------------------------------------------



------------------------------------------------------UPDATE BOAT-------------------------------------------------------
$boatController = BoatController::getInstance();
$boat =  $boatController->updateBoat(4,"OceanGun","1850");
------------------------------------------------------UPDATE BOAT-------------------------------------------------------




------------------------------------------------------GET LIST CITIES---------------------------------------------------
$cityController = CityController::getInstance();
$cities = $cityController->getListCities();

var_dump($cities);
------------------------------------------------------GET LIST CITIES---------------------------------------------------

------------------------------------------------------GET CITY BY NAME--------------------------------------------------
$cityController = CityController::getInstance();
$cities = $cityController->getCity('Dunkerque');

var_dump($cities);
------------------------------------------------------GET CITY BY NAME--------------------------------------------------


------------------------------------------------------------ADD CITY----------------------------------------------------
$cityController = CityController::getInstance();
$cityController->addCity('Rouen',49.4431, 1.0993);
------------------------------------------------------------ADD CITY----------------------------------------------------

---------------------------------------------------------DELETE CITY----------------------------------------------------
$cityController = CityController::getInstance();
$cityController->deleteCity('Dunkerque');
---------------------------------------------------------DELETE CITY----------------------------------------------------

---------------------------------------------------------LIST TRIPS-----------------------------------------------------
$fluvialTripManager = FluvialTripManager::getInstance();
$trips = $fluvialTripManager->getListFluvialTrips();

var_dump($trips);
---------------------------------------------------------LIST TRIPS-----------------------------------------------------

---------------------------------------------------------ADD TRIP-------------------------------------------------------
$fluvialTripManager = FluvialTripManager::getInstance();
$fluvialTripManager->addFluvialTrip("Rouen", 12.3654788, 4.12545696,
    "Bruay", 45.6325896, 2.12547852, 1.80, 1780,"2019-09-11" );
---------------------------------------------------------ADD TRIP-------------------------------------------------------


---------------------------------------------------------DELETE TRIP----------------------------------------------------
$fluvialTripManager = FluvialTripManager::getInstance();
$fluvialTripManager->deleteFluvialTrip(5);
---------------------------------------------------------DELETE TRIP----------------------------------------------------

---------------------------------------------------------UPDATE TRIP----------------------------------------------------
$fluvialManager = FluvialTripManager::getInstance();
$fluvialManager->updateFluvialTrip(2, "DK",3.05456,42.123, "EM", 2.125, 45.2136, 1.45,1100,"2019-06-09");
---------------------------------------------------------UPDATE TRIP----------------------------------------------------

---------------------------------------------------------GET LIST USERS-------------------------------------------------
$userManager = UserManager::getInstance();
var_dump($userManager->getListUsers());
---------------------------------------------------------GET LIST USERS-------------------------------------------------

---------------------------------------------------------ADD USERS------------------------------------------------------
$userController = UserController::getInstance();
$userController->addUser("******", "******","065458895", password_hash("hello",PASSWORD_DEFAULT));
---------------------------------------------------------ADD USERS------------------------------------------------------

---------------------------------------------------------EXIST USERS----------------------------------------------------
$userManager = UserManager::getInstance();
var_dump($userManager->existUser("Unix"));
---------------------------------------------------------EXIST USERS----------------------------------------------------

---------------------------------------------------------DELETE USERS---------------------------------------------------
$userManager = UserController::getInstance();
try {
    $userManager->deleteUser(6, "******", "******");
} catch (Exception $e) {
    echo $e->getMessage();
}
---------------------------------------------------------DELETE USERS---------------------------------------------------


---------------------------------------------ADD FAVORITE TRANSPORT USERS-----------------------------------------------
$favoriteManager = FavoriteTransportController::getInstance();
$favoriteManager->addFavoriteTrip(2,1);
---------------------------------------------ADD FAVORITE TRANSPORT USERS-----------------------------------------------


----------------------------------------GET LIST FAVORITE TRANSPORT BY USER ID------------------------------------------
$favoriteManager = FavoriteTransportController::getInstance();
$favoriteTrip =  $favoriteManager->getFavoriteTrip(2);
var_dump($favoriteTrip);
----------------------------------------GET LIST FAVORITE TRANSPORT BY USER ID------------------------------------------


---------------------------------------------DELETE FAVORITE TRANSPORT -------------------------------------------------
$favoriteManager = FavoriteTransportController::getInstance();
$favoriteManager->deleteFavoriteTrip(8);
---------------------------------------------DELETE FAVORITE TRANSPORT -------------------------------------------------


/*
require('vendor/twig/twig/lib/Twig/Extension/Twig_Extension_Session.php');
$loader = new Twig_Loader_Filesystem(__DIR__ . '/views');
$twig = new Twig_Environment($loader, [
    'cache' => false, // __DIR__ . '/tmp'
]);

 * switch ($page) {
    case 'connection':
        echo $twig->render('connection.php');
        break;
    case 'inscription':
        echo $twig->render('inscription.php');
        break;
    case 'home':
        echo $twig->render('userHome.php', [flash($_POST['name'], $_POST['firstName'])]);
        break;
    default:
        header('HTTP/1.0 404 Not Found');
        echo $twig->render('404.twig');
        break;
}
 */
